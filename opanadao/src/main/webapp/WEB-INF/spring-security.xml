<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.o.opanadaoBackend"/>

    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <http pattern="/resources/**" security="none"/>

    <http>
        <!--ADMIN ACCESS-->
        <intercept-url pattern="/gerir/**" access="hasAuthority('ADMIN')"/>
        <!--USER ACCESS-->
        <intercept-url pattern="/cart/**" access="hasAuthority('CUSTOMER')"/>
        <!--EVERYONE-->
        <intercept-url pattern="/**" access="permitAll()"/>
        <form-login login-page="/login"/>
        <access-denied-handler error-page="/access-denied"/>
    </http>

    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="passwordEncoder"/>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT EMAIL, PASSWORD, ENABLED FROM USER WHERE EMAIL = ?"
                               authorities-by-username-query="SELECT EMAIL, ROLE FROM USER WHERE EMAIL = ?"

            />
        </authentication-provider>
    </authentication-manager>

</beans:beans>